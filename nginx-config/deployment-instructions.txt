--- VM IS ALREADY CONFIGURED AND DEPLOYED, NO NEED TO DO THIS AGAIN ---

As of the current time, node and npm packages are not installed globally, so you will not be able to do node commands within the vm.
Server configuration is done on cwzhang, my account. Ask me (Alex) if you need anything regarding VM deployment for the time being.

Server will run permamently with the current nohup command, but all stdout messages are redirected to the void. I also can't find the process to kill to stop the website
at the moment. To be done. Will probably use tmux or screen in iteration 3.

In summary, website is deployed at cmpt373-1177g.cmpt.sfu.ca using nginx to reverse proxy http and https requests to the correct ports.

Useful commands:

- sudo su - goes into root mode
- sudo service restart nginx - necessary to load nginx changes
- sudo cp default /etc/nginx/sites-available (when you are in the nginx-config directory) - updates nginx configuration to what we have in this folder
- sudo nginx -t - checks if nginx is configured properly

- sudo nano nohup.out (in /project dir) - Checks all terminal prompts from starting the server
- nohup npm start > /dev/null 2>&1 &  - starts the server process in the background, so even when you exit the vm it will still be running.
- ps -A (Check pid processes)
- kill (pid) - ex: kill 1107 - Used to kill processes shown in ps -a. Kill npm and node processes until site goes down if you need to terminate.


Step to step instructions to replicate deployment on a fresh machine:

1) SSH into VM with Putty: cmpt373-1177g.cmpt.sfu.ca:22
-- Enter your SFU username, and password in the prompt.

Troubleshooting: Are you using putty? If you try to SSH into it directly, you will automatically enter as user root.

2) Clone project into folder (Set up git and ssh keys, then clone)

3) Install node and npm using linuxbrew (not globally done by default) - http://blog.teamtreehouse.com/install-node-js-npm-linux
-Instructions on this website will redirect you to homebrew main page because outdated package.

4) Install necessary npm dependencies in source folder (~/project)
npm install
npm install semantic-ui-react --save
npm install semantic-ui-css --save

5) Setup database
sudo apt-get update
sudo apt-get install mysql-server
mysql_secure_installation

-Go through mysql_secure_installation dialogues. You can say no for most things, but remember to set a password you remember in 'install mysql-server'

If there is root password issue: https://askubuntu.com/questions/766900/mysql-doesnt-ask-for-root-password-when-installing

Create a database:

'Run mysql -u root -p'
'create database demodb;'

6) Install python 3: sudo apt-get install python3-pip

Check your python directory: which python3
Change src/PyScripts/pyoptions.js - replace executable path with the result of 'which python3' (/usr/bin/python3 on our vm)

Replace scriptPath in the same file to PyScripts folder on your machine (/home/cwzhang/project/src/PyScripts in vm case)

7) Install python dependencies

- pip3 install PyPDF2
- pip3 install reportlab
- pip3 install requests
- pip3 install pandas
- pip3 install selenium
- pip3 install Faker

Use sudo if necessary for pandas.

8) Install Nginx

sudo -s
nginx=stable # use nginx=development for latest development version
apt-get software-properties-common maybe necessary
add-apt-repository ppa:nginx/$nginx
apt-get update
apt-get install nginx

9) Copy default nginx file over (cd to nginx-config dir): sudo cp default /etc/nginx/sites-available

sudo service nginx restart - everytime you make changes
sudo nginx -t - check if it is configured properly

10) Sign and manually deploy a TLS certificate signed by LetsEncrypt, the CA:

- sudo certbot certonly -a manual -d mydomain.ca

Follow the rest of the instructions in /nginx-config/default comments on how to deploy the file they want you to use.
 Copy (use sudo) the generated certificates to the appropriate directory.

11) Start server permanently: sudo nohup npm start > /dev/null 2>&1 & - Maybe sudo is needed, not sure yet. Will look into screen later.

12) Visit the website to make sure things are working: cmpt373-1177g.cmpt.sfu.ca

13) Exit putty using logout, apparently this works but closing the terminal directly will kill the process ??

14) To kill the server:
- ps -a
- kill npm and node threads until the site goes down.

Server will not automatically relaunch itself on termination at this time.
You can see the console logs in the root folder at file nohup.out

Extra:

Db.js password: hooh392
pythonPath: '/usr/bin/python3',
scriptPath: '/home/cwzhang/project/src/PyScripts/',
